# ideas: maybe use bert to predict the nth token, and see how likely that
# word is to be chosen
Pipeline:
  - name: find_noun_phrases
    task: extract_contrived_noun_phrases_
    outputs: [ "phrases" ]
  - name: filter_phrases
    task: filter_by_google_search_result_count_
    dependencies:
      - find_noun_phrases: {
        "phrases": "phrases"
      }
    outputs: [ "obscure_phrases" ]


Feedback:
  shortDesc: "Consider rewording '{obscure_phrases[i]}'"
  longDesc: "This is obscure and may be confusing to recruiters"
  srcNautTokens: "obscure_phrases"

TruePositives:
  - # user creation generation
  - { old: "Optimized user creation generation using ASP.Net and React, reducing wait time by 80%" }
TrueNegatives:
  - "Optimized the signup flow using ASP.Net and React, reducing wait time by 80%"
